{"ast":null,"code":"var _jsxFileName = \"/Users/laurat/coding/front-end/react/birthday-reminder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './Data';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState(data);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [people.map(person => {\n        const {\n          id,\n          name,\n          age,\n          image\n        } = person;\n        let date = new Date();\n        let birthday = new Date(person.birthday);\n        if (date.getMonth() === birthday.getMonth() && date.getDate() === birthday.getDate()) {\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"person\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [age, \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }), /*#__PURE__*/_jsxDEV(List, {\n        people: people\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPeople([]),\n        children: \"clear all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1LkHEtj2RWqZMtew8JQSoeuNX/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","List","App","people","setPeople","map","person","id","name","age","image","date","Date","birthday","getMonth","getDate"],"sources":["/Users/laurat/coding/front-end/react/birthday-reminder/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport data from './Data'\nimport List from './List'\nfunction App() {\n  const [people, setPeople] = useState(data)\n\n  return (\n    <main>\n      <section className='container'>\n        {people.map((person) => {\n          const { id, name, age, image } = person;\n          let date = new Date();\n          let birthday = new Date(person.birthday);\n          if (date.getMonth() === birthday.getMonth() && date.getDate() === birthday.getDate()) {\n            return (\n              <article key={id} className='person'>\n                <img src={image} alt={name} />\n                <div>\n                  <h4>{name}</h4>\n                  <p>{age} years</p>\n                </div>\n              </article>\n            );\n          }\n          return null;\n        })}\n\n        <List people={people} />\n        <button onClick={() => setPeople([])}>clear all</button>\n      </section>\n    </main >\n  )\n}\n\n\n\nexport default App\n\n\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAA;AACzB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACC,IAAI,CAAC;EAE1C,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,WAAW;MAAA,WAC3BG,MAAM,CAACE,GAAG,CAAEC,MAAM,IAAK;QACtB,MAAM;UAAEC,EAAE;UAAEC,IAAI;UAAEC,GAAG;UAAEC;QAAM,CAAC,GAAGJ,MAAM;QACvC,IAAIK,IAAI,GAAG,IAAIC,IAAI,EAAE;QACrB,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC;QACxC,IAAIF,IAAI,CAACG,QAAQ,EAAE,KAAKD,QAAQ,CAACC,QAAQ,EAAE,IAAIH,IAAI,CAACI,OAAO,EAAE,KAAKF,QAAQ,CAACE,OAAO,EAAE,EAAE;UACpF,oBACE;YAAkB,SAAS,EAAC,QAAQ;YAAA,wBAClC;cAAK,GAAG,EAAEL,KAAM;cAAC,GAAG,EAAEF;YAAK;cAAA;cAAA;cAAA;YAAA,QAAG,eAC9B;cAAA,wBACE;gBAAA,UAAKA;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACf;gBAAA,WAAIC,GAAG,EAAC,QAAM;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAI;YAAA;cAAA;cAAA;cAAA;YAAA,QACd;UAAA,GALMF,EAAE;YAAA;YAAA;YAAA;UAAA,QAMN;QAEd;QACA,OAAO,IAAI;MACb,CAAC,CAAC,eAEF,QAAC,IAAI;QAAC,MAAM,EAAEJ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACxB;QAAQ,OAAO,EAAE,MAAMC,SAAS,CAAC,EAAE,CAAE;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAChD;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;AAAC,GA7BQF,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}