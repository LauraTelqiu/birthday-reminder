{"ast":null,"code":"var _jsxFileName = \"/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    people\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      const {\n        id,\n        name,\n        image,\n        birthDay,\n        birthMonth,\n        birthYear\n      } = person;\n      let date = new Date();\n      let day = date.getDate();\n      let month = date.getMonth();\n      let year = date.getFullYear();\n      if (day === birthDay && month + 1 === birthMonth) {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"person\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [year - birthYear, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","List","people","map","person","id","name","image","birthDay","birthMonth","birthYear","date","Date","day","getDate","month","getMonth","year","getFullYear"],"sources":["/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst List = ({ people }) => {\n  return (\n    <>\n\n      {/* <h3>{people.length} birthdays today</h3> */}\n      {people.map((person) => {\n        const { id, name, image, birthDay, birthMonth, birthYear } = person;\n        let date = new Date();\n        let day = date.getDate();\n        let month = date.getMonth();\n        let year = date.getFullYear();\n\n\n\n        if (day === birthDay && month + 1 === birthMonth) {\n          return (\n\n            <article key={id} className=\"person\">\n              <img src={image} alt={name} />\n              <div>\n                <h4>{name}</h4>\n                <p>{year - birthYear} years</p>\n              </div>\n            </article>\n          );\n        }\n      })}\n    </>\n\n  );\n};\n\nexport default List;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,IAAI,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB,oBACE;IAAA,UAGGA,MAAM,CAACC,GAAG,CAAEC,MAAM,IAAK;MACtB,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC,QAAQ;QAAEC,UAAU;QAAEC;MAAU,CAAC,GAAGN,MAAM;MACnE,IAAIO,IAAI,GAAG,IAAIC,IAAI,EAAE;MACrB,IAAIC,GAAG,GAAGF,IAAI,CAACG,OAAO,EAAE;MACxB,IAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,EAAE;MAC3B,IAAIC,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;MAI7B,IAAIL,GAAG,KAAKL,QAAQ,IAAIO,KAAK,GAAG,CAAC,KAAKN,UAAU,EAAE;QAChD,oBAEE;UAAkB,SAAS,EAAC,QAAQ;UAAA,wBAClC;YAAK,GAAG,EAAEF,KAAM;YAAC,GAAG,EAAED;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eAC9B;YAAA,wBACE;cAAA,UAAKA;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACf;cAAA,WAAIW,IAAI,GAAGP,SAAS,EAAC,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3B;QAAA,GALML,EAAE;UAAA;UAAA;UAAA;QAAA,QAMN;MAEd;IACF,CAAC;EAAC,iBACD;AAGP,CAAC;AAAC,KA9BIJ,IAAI;AAgCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}