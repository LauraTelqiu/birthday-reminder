{"ast":null,"code":"var _jsxFileName = \"/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    people\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      const {\n        id,\n        name,\n        age,\n        image,\n        birthday\n      } = person;\n      let objectDate = new Date();\n      let day = objectDate.getDate();\n      console.log(day); // 23\n\n      let month = objectDate.getMonth();\n      console.log(month + 1); // 8\n\n      let year = objectDate.getFullYear();\n      console.log(year); // 2022\n\n      {/* if (todayDate === birthDate) { console.log('match') }\n       else { console.log('not match') } */}\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"person\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [age, \" years\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","List","people","map","person","id","name","age","image","birthday","objectDate","Date","day","getDate","console","log","month","getMonth","year","getFullYear"],"sources":["/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js"],"sourcesContent":["import React from 'react';\n\nconst List = ({ people }) => {\n  return (\n    <>\n      {people.map((person) => {\n        const { id, name, age, image, birthday } = person;\n        let objectDate = new Date();\n\n\n        let day = objectDate.getDate();\n        console.log(day); // 23\n\n        let month = objectDate.getMonth();\n        console.log(month + 1); // 8\n\n        let year = objectDate.getFullYear();\n        console.log(year); // 2022\n\n\n\n        {/* if (todayDate === birthDate) { console.log('match') }\n        else { console.log('not match') } */}\n        return (\n          <article key={id} className='person'>\n            <img src={image} alt={name} />\n            <div>\n              <h4>{name}</h4>\n              <p>{age} years</p>\n            </div>\n          </article>\n        );\n      })}\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,IAAI,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB,oBACE;IAAA,UACGA,MAAM,CAACC,GAAG,CAAEC,MAAM,IAAK;MACtB,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGL,MAAM;MACjD,IAAIM,UAAU,GAAG,IAAIC,IAAI,EAAE;MAG3B,IAAIC,GAAG,GAAGF,UAAU,CAACG,OAAO,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC,CAAC,CAAC;;MAElB,IAAII,KAAK,GAAGN,UAAU,CAACO,QAAQ,EAAE;MACjCH,OAAO,CAACC,GAAG,CAACC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;;MAExB,IAAIE,IAAI,GAAGR,UAAU,CAACS,WAAW,EAAE;MACnCL,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;;MAInB,CAAC;AACT,2CADS;MAED,oBACE;QAAkB,SAAS,EAAC,QAAQ;QAAA,wBAClC;UAAK,GAAG,EAAEV,KAAM;UAAC,GAAG,EAAEF;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9B;UAAA,wBACE;YAAA,UAAKA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACf;YAAA,WAAIC,GAAG,EAAC,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QACd;MAAA,GALMF,EAAE;QAAA;QAAA;QAAA;MAAA,QAMN;IAEd,CAAC;EAAC,iBACD;AAEP,CAAC;AAAC,KAjCIJ,IAAI;AAmCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}