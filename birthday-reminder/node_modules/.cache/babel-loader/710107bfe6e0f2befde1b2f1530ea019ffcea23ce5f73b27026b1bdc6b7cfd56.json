{"ast":null,"code":"var _jsxFileName = \"/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    people\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      const {\n        id,\n        name,\n        age,\n        image,\n        birthMonth,\n        birthDay,\n        birthYear\n      } = person;\n      let today = new Date();\n      console.log(today);\n      if (birthDay === today.getDay() && birthMonth === today.getMonth()) {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"person\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [age, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    })\n  }, void 0, false);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["List","people","map","person","id","name","age","image","birthMonth","birthDay","birthYear","today","Date","console","log","getDay","getMonth"],"sources":["/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js"],"sourcesContent":["const List = ({ people }) => {\n  return (\n    <>\n      {people.map((person) => {\n        const { id, name, age, image, birthMonth, birthDay, birthYear } = person;\n        let today = new Date();\n        console.log(today)\n        if (birthDay === today.getDay() && birthMonth === today.getMonth()) {\n\n\n          return (\n            <article key={id} className='person'>\n              <img src={image} alt={name} />\n              <div>\n                <h4>{name}</h4>\n                <p>{age} years</p>\n              </div>\n            </article>\n          );\n        }\n        return null;\n      })}\n\n\n\n\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":";;;AAAA,MAAMA,IAAI,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB,oBACE;IAAA,UACGA,MAAM,CAACC,GAAG,CAAEC,MAAM,IAAK;MACtB,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEC,UAAU;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGP,MAAM;MACxE,IAAIQ,KAAK,GAAG,IAAIC,IAAI,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,IAAIF,QAAQ,KAAKE,KAAK,CAACI,MAAM,EAAE,IAAIP,UAAU,KAAKG,KAAK,CAACK,QAAQ,EAAE,EAAE;QAGlE,oBACE;UAAkB,SAAS,EAAC,QAAQ;UAAA,wBAClC;YAAK,GAAG,EAAET,KAAM;YAAC,GAAG,EAAEF;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eAC9B;YAAA,wBACE;cAAA,UAAKA;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACf;cAAA,WAAIC,GAAG,EAAC,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QACd;QAAA,GALMF,EAAE;UAAA;UAAA;UAAA;QAAA,QAMN;MAEd;MACA,OAAO,IAAI;IACb,CAAC;EAAC,iBAKD;AAEP,CAAC;AAAC,KA5BIJ,IAAI;AA8BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}