{"ast":null,"code":"import React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    people\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      const {\n        id,\n        name,\n        age,\n        image,\n        birthday,\n        birthMonth\n      } = person;\n      let date = new Date();\n      let day = date.getDate();\n      {/* console.log(day); // 24 */}\n      let month = date.getMonth();\n      {/* console.log(month + 1); // 1 */}\n      let year = date.getFullYear();\n      {/* console.log(year); // 2023 */}\n      if (day === birthday && month === birthMonth) {\n        console.log(\"match\");\n      }\n      return {/* <article key={id} className='person'>\n               <img src={image} alt={name} />\n               <div>\n                 <h4>{name}</h4>\n                 <p>{age} years</p>\n               </div>\n              </article> */};\n    })\n  }, void 0, false);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","List","people","map","person","id","name","age","image","birthday","birthMonth","date","Date","day","getDate","month","getMonth","year","getFullYear","console","log"],"sources":["/Users/laurat/coding/front-end/react/birthday-reminder/src/List.js"],"sourcesContent":["import React from 'react';\n\nconst List = ({ people }) => {\n  return (\n    <>\n      {people.map((person) => {\n        const { id, name, age, image, birthday, birthMonth } = person;\n        let date = new Date();\n\n\n        let day = date.getDate();\n        {/* console.log(day); // 24 */ }\n\n        let month = date.getMonth();\n        {/* console.log(month + 1); // 1 */ }\n\n        let year = date.getFullYear();\n        {/* console.log(year); // 2023 */ }\n        if (day === birthday && month === birthMonth) {\n          console.log(\"match\")\n        }\n\n\n\n        return (\n          {/* <article key={id} className='person'>\n            <img src={image} alt={name} />\n            <div>\n              <h4>{name}</h4>\n              <p>{age} years</p>\n            </div>\n          </article> */}\n        );\n      })}\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,IAAI,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB,oBACE;IAAA,UACGA,MAAM,CAACC,GAAG,CAAEC,MAAM,IAAK;MACtB,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAW,CAAC,GAAGN,MAAM;MAC7D,IAAIO,IAAI,GAAG,IAAIC,IAAI,EAAE;MAGrB,IAAIC,GAAG,GAAGF,IAAI,CAACG,OAAO,EAAE;MACxB,CAAC;MAED,IAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,EAAE;MAC3B,CAAC;MAED,IAAIC,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;MAC7B,CAAC;MACD,IAAIL,GAAG,KAAKJ,QAAQ,IAAIM,KAAK,KAAKL,UAAU,EAAE;QAC5CS,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB;MAIA,OACE,CAAC;AACX;AACA;AACA;AACA;AACA;AACA,2BANW,CAMa;IAElB,CAAC;EAAC,iBACD;AAEP,CAAC;AAAC,KAlCInB,IAAI;AAoCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}